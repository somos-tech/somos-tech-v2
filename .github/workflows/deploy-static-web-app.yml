name: Deploy Static Web App

on:
  push:
    branches:
      - main
    paths:
      - 'apps/web/**'
      - '.github/workflows/deploy-static-web-app.yml'
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
    paths:
      - 'apps/web/**'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - dev
          - prod
        default: 'dev'

env:
  NODE_VERSION: '20'

jobs:
  # Deploy infrastructure first
  deploy-infrastructure-dev:
    if: (github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev')) && github.event.action != 'closed'
    runs-on: ubuntu-latest
    environment: dev
    name: Deploy Infrastructure (Dev)
    outputs:
      staticWebAppName: ${{ steps.deploy.outputs.staticWebAppName }}
      staticWebAppUrl: ${{ steps.deploy.outputs.staticWebAppUrl }}
    steps:
      - uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Infrastructure
        id: deploy
        run: |
          DEPLOYMENT_OUTPUT=$(az deployment group create \
            --name "infra-$(date +%Y%m%d-%H%M%S)" \
            --resource-group rg-somos-tech-dev \
            --template-file ./infra/main.bicep \
            --parameters ./infra/main.dev.bicepparam \
            --parameters azureAdClientSecret="${{ secrets.AZURE_AD_CLIENT_SECRET }}" \
            --query properties.outputs \
            --output json)

          echo "staticWebAppName=$(echo $DEPLOYMENT_OUTPUT | jq -r '.staticWebAppName.value')" >> $GITHUB_OUTPUT
          echo "staticWebAppUrl=$(echo $DEPLOYMENT_OUTPUT | jq -r '.staticWebAppUrl.value')" >> $GITHUB_OUTPUT
          echo "Infrastructure deployed successfully!"

      - name: Azure logout
        run: az logout
        if: always()

  # Deploy to dev automatically on push to main
  deploy-dev:
    needs: deploy-infrastructure-dev
    if: (github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'dev')) && github.event.action != 'closed'
    runs-on: ubuntu-latest
    environment: dev
    name: Deploy to Dev
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: apps/web

      - name: Build application
        run: npm run build
        working-directory: apps/web
        env:
          VITE_API_URL: ${{ vars.VITE_API_URL }}
          VITE_ENVIRONMENT: dev

      - name: Deploy to Azure Static Web Apps (Dev)
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          app_location: 'apps/web/dist'
          api_location: ''
          output_location: '.'
          skip_app_build: true

  # Deploy infrastructure for production
  deploy-infrastructure-prod:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod'
    runs-on: ubuntu-latest
    environment: prod
    name: Deploy Infrastructure (Production)
    outputs:
      staticWebAppName: ${{ steps.deploy.outputs.staticWebAppName }}
      staticWebAppUrl: ${{ steps.deploy.outputs.staticWebAppUrl }}
    steps:
      - uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Infrastructure
        id: deploy
        run: |
          DEPLOYMENT_OUTPUT=$(az deployment group create \
            --name "infra-$(date +%Y%m%d-%H%M%S)" \
            --resource-group rg-somos-tech-prod \
            --template-file ./infra/main.bicep \
            --parameters ./infra/main.prod.bicepparam \
            --parameters azureAdClientSecret="${{ secrets.AZURE_AD_CLIENT_SECRET }}" \
            --query properties.outputs \
            --output json)

          echo "staticWebAppName=$(echo $DEPLOYMENT_OUTPUT | jq -r '.staticWebAppName.value')" >> $GITHUB_OUTPUT
          echo "staticWebAppUrl=$(echo $DEPLOYMENT_OUTPUT | jq -r '.staticWebAppUrl.value')" >> $GITHUB_OUTPUT
          echo "Infrastructure deployed successfully!"

      - name: Azure logout
        run: az logout
        if: always()

  # Deploy to production (manual approval required via environment protection rules)
  deploy-prod:
    needs: deploy-infrastructure-prod
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'prod'
    runs-on: ubuntu-latest
    environment: prod
    name: Deploy to Production
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: apps/web

      - name: Build application
        run: npm run build
        working-directory: apps/web
        env:
          VITE_API_URL: ${{ vars.VITE_API_URL }}
          VITE_ENVIRONMENT: prod

      - name: Deploy to Azure Static Web Apps (Production)
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          app_location: 'apps/web/dist'
          api_location: ''
          output_location: '.'
          skip_app_build: true

  # Handle PR preview deployments (uses dev environment)
  deploy-preview:
    if: github.event_name == 'pull_request' && github.event.action != 'closed'
    runs-on: ubuntu-latest
    environment: dev
    name: Deploy PR Preview
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: apps/web

      - name: Build application
        run: npm run build
        working-directory: apps/web
        env:
          VITE_API_URL: ${{ vars.VITE_API_URL }}
          VITE_ENVIRONMENT: preview

      - name: Deploy PR Preview
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          app_location: 'apps/web/dist'
          api_location: ''
          output_location: '.'
          skip_app_build: true

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    environment: dev
    name: Close Pull Request
    steps:
      - name: Close Pull Request
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          action: 'close'
          app_location: 'apps/web/dist'

name: Deploy to Azure

on:
  push:
    branches:
      - main
    paths:
      - 'infra/**'
      - 'apps/**'
      - '.github/workflows/deploy-azure.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
          - dev
          - prod
        default: 'dev'
      deploy_infra:
        description: 'Deploy infrastructure'
        required: false
        type: boolean
        default: true
      deploy_api:
        description: 'Deploy API (Function App)'
        required: false
        type: boolean
        default: true
      deploy_web:
        description: 'Deploy Web (Static Web App)'
        required: false
        type: boolean
        default: true

env:
  NODE_VERSION: '20'
  ENVIRONMENT: ${{ github.event.inputs.environment || 'dev' }}

jobs:
  # Job 1: Deploy Infrastructure FIRST
  deploy-infrastructure:
    if: |
      github.event.inputs.deploy_infra != 'false' &&
      (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    name: Deploy Infrastructure
    outputs:
      infra_deployed: ${{ steps.deploy.outcome }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Bicep to Azure
      id: deploy
      uses: azure/arm-deploy@v2
      with:
        scope: resourcegroup
        subscriptionId: ${{ vars.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: ${{ vars.RESOURCE_GROUP_NAME }}
        template: ./infra/main.bicep
        parameters: >
          ./infra/main.${{ github.event.inputs.environment || 'dev' }}.bicepparam
          azureAdClientSecret=${{ secrets.AZURE_AD_CLIENT_SECRET }}
        failOnStdErr: false

    - name: Azure logout
      run: az logout
      if: always()

  # Job 2: Deploy Function App (depends on infrastructure)
  deploy-function-app:
    needs: deploy-infrastructure
    if: |
      always() &&
      needs.deploy-infrastructure.result == 'success' &&
      github.event.inputs.deploy_api != 'false' &&
      (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    name: Deploy Function App

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: apps/api/package-lock.json

    - name: Install dependencies
      run: npm ci
      working-directory: apps/api

    - name: Run tests (if available)
      run: npm test --if-present
      working-directory: apps/api
      continue-on-error: true

    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Functions
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ vars.AZURE_FUNCTIONAPP_NAME }}
        package: apps/api
        scm-do-build-during-deployment: false
        enable-oryx-build: false

    - name: Azure logout
      run: az logout
      if: always()

  # Job 3: Deploy Static Web App (depends on infrastructure, runs parallel with function app)
  deploy-static-web-app:
    needs: deploy-infrastructure
    if: |
      always() &&
      needs.deploy-infrastructure.result == 'success' &&
      github.event.inputs.deploy_web != 'false' &&
      (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    name: Deploy Static Web App

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: apps/web

      - name: Build application
        run: npm run build
        working-directory: apps/web
        env:
          VITE_API_URL: ${{ vars.VITE_API_URL }}
          VITE_ENVIRONMENT: ${{ github.event.inputs.environment || 'dev' }}

      - name: Deploy to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: 'upload'
          app_location: 'apps/web/dist'
          api_location: ''
          output_location: '.'
          skip_app_build: true
